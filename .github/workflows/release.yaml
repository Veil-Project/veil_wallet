name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name (without "v" prefix, ex. 1.0.0)'
        default: '1.0.0'
      draft:
        description: 'Should new release be a draft?'
        type: boolean
        required: true
        default: true

jobs:
  build:
    uses: ./.github/workflows/build.yaml
    secrets: inherit

  create_release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      # 1) artifact (veil-wallet win-x86_64)
      - uses: actions/download-artifact@v4
        with:
          name: veil-wallet win-x86_64
          path: './veil-wallet win-x86_64'
      - uses: actions/download-artifact@v4
        with:
          name: veil-wallet win-x86_64 setup
          path: './'
      - run: |
          rm -rf 'veil-wallet (win-x86_64).zip'
          zip -r 'veil-wallet (win-x86_64).zip' './veil-wallet win-x86_64'
          rm -rf './veil-wallet win-x86_64/'
          mv './veil-wallet-setup.exe' './veil-wallet.win-x86_64-setup.exe'
      # 2) artifact (veil-wallet linux-x86_64)
      - uses: actions/download-artifact@v4
        with:
          name: veil-wallet linux-x86_64
          path: './veil-wallet linux-x86_64'
      - uses: actions/download-artifact@v4
        with:
          name: veil-wallet linux-x86_64 appimage
          path: './'
      - uses: actions/download-artifact@v4
        with:
          name: veil-wallet linux-x86_64 deb
          path: './'
      - uses: actions/download-artifact@v4
        with:
          name: veil-wallet linux-x86_64 rpm
          path: './'
      - run: |
          rm -rf 'veil-wallet (linux-x86_64).zip'
          zip -r 'veil-wallet (linux-x86_64).zip' './veil-wallet linux-x86_64'
          mv './veil-wallet.appimage' './veil-wallet.linux-x86_64.appimage'
          mv './veil-wallet.deb' './veil-wallet.linux-x86_64.deb'
          mv './veil-wallet.rpm' './veil-wallet.linux-x86_64.rpm'
      # 3) artifact (veil-wallet macos-universal)
      - uses: actions/download-artifact@v4
        with:
          name: veil-wallet macos-universal dmg
          path: './'
      - run: |
          mv './veil-wallet.dmg' './veil-wallet.macos-universal.dmg'
      # 4) artifact (veil-wallet ios)
      - uses: actions/download-artifact@v4
        with:
          name: veil-wallet ios
          path: './veil-wallet ios'
      - run: |
          mv './veil-wallet ios/app-release.ipa' './veil-wallet (ios).ipa'
      # 5) artifact (veil-wallet android)
      - uses: actions/download-artifact@v4
        with:
          name: veil-wallet android
          path: './veil-wallet android'
      - run: |
          mv './veil-wallet android/app-release.apk' './veil-wallet (android).apk'
      # 6) artifact (veil-wallet android armeabi-v7a)
      - uses: actions/download-artifact@v4
        with:
          name: veil-wallet android-armeabi-v7a
          path: './veil-wallet android'
      - run: |
          mv './veil-wallet android/app-armeabi-v7a-release.apk' './veil-wallet (android-armeabi-v7a).apk'
      # 7) artifact (veil-wallet android arm64-v8a)
      - uses: actions/download-artifact@v4
        with:
          name: veil-wallet android-arm64-v8a
          path: './veil-wallet android'
      - run: |
          mv './veil-wallet android/app-arm64-v8a-release.apk' './veil-wallet (android-arm64-v8a).apk'
      # 8) artifact (veil-wallet android x86_64)
      - uses: actions/download-artifact@v4
        with:
          name: veil-wallet android-x86_64
          path: './veil-wallet android'
      - run: |
          mv './veil-wallet android/app-x86_64-release.apk' './veil-wallet (android-x86_64).apk'
      # upload release
      - uses: ncipollo/release-action@v1
        with:
          commit: 'main'
          tag: 'v${{ inputs.tag }}'
          allowUpdates: true
          artifactErrorsFailBuild: true
          generateReleaseNotes: true
          draft: '${{ inputs.draft }}'
          name: 'Veil Wallet ${{ inputs.tag }}'
          removeArtifacts: true
          artifacts: '*.zip,*.apk,*.ipa,*.dmg,*.appimage,*.deb,*.rpm,*.exe'